{"version":3,"file":"component---packages-blog-gatsby-blog-core-src-templates-categories-gs-js-67ac94cc26f4214fdbe8.js","mappings":"iVAGA,ECKmB,SAAC,GAA+C,IAAD,IAA7CA,KAAOC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,eAAoBC,GAAW,YAMhE,OAJAC,QAAQC,IAAI,UAAWJ,GACvBG,QAAQC,IAAI,mBAAoBH,GAChCE,QAAQC,IAAI,UAAWF,IAGrB,QAAC,KAAWA,GACV,QAACG,EAAA,EAAD,CAAKC,MAAOL,EAAeM,KAAMC,YAAaP,EAAeO,eAC7D,QAACC,EAAA,EAAD,OACA,QAAC,KAAD,CAAOC,YAAa,CAACC,OAAQ,gBAC3B,QAACC,EAAA,EAAD,CACEC,OAAQZ,EAAeM,KACvBO,UAAWb,EAAeK,MAC1BS,QAASd,EAAeO,YACxBQ,WAAYhB,EAAMgB,eAGtB,QAACP,EAAA,EAAD,OACA,QAAC,KAAD,MACE,QAAC,KAAD,MACE,mBACGT,EAAMiB,QAAS,QAACC,EAAA,EAAclB,OAIrC,QAACS,EAAA,EAAD,OACA,QAAC,KAAD,MACE,QAACU,EAAA,GAAD,UAAkBnB,EAAMoB,SAAcnB,Q,msBC7B9C,IAEMoB,EAAS,CACbC,QAAS,CACPC,eAAe,gBACfC,WAAW,SACXC,UAAU,SACVC,aAAa,OACbC,GAAG,YACHC,SAAU,CAAC,OAAQ,KACnBC,GAAG,OACHC,EAAG,GAELC,KAAM,CACJC,MAAM,OAERC,OAAQ,CACNC,GAAI,GAENC,OAAQ,CACNC,SAAS,SA2Cb,EAvCqB,SAAC,GAOf,IANLC,EAMI,EANJA,YACAC,EAKI,EALJA,UACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,YAGI,IAFJC,SAAAA,OAEI,MAFO,GAEP,MADJC,KAAAA,OACI,MADG,GACH,EACJ,IAAKF,IAAgBD,EAAiB,MAAO,GAC7C,IAAII,GAAaC,EAAAA,EAAAA,GAAcH,EAAWC,GACtCG,GAAaD,EAAAA,EAAAA,GAAcD,EAlCb,QAmCZG,EAAWT,GAAe,EAAf,IAAuBQ,GAAaR,EAAc,GAAlD,IAA4DM,EACvEI,EAAQ,IAAOF,GAAaR,EAAc,GAEhD,OACE,QAAC,KAAD,CAAMW,GAAI3B,EAAOC,UACf,QAAC,KAAD,CAAK0B,GAAI3B,EAAOU,MACbQ,IACC,QAAC,KAAD,CAAQU,QAAQ,OAAOC,GAAIC,EAAAA,GAAMC,GAAIN,EAAUE,GAAI3B,EAAOc,SACxD,QAAC,MAAD,MADF,cAMJ,QAAC,KAAD,CAAKa,GAAE,OAAO3B,EAAOU,MAASV,EAAOY,SAArC,SACO,sBAASI,GADhB,QACyC,sBAASC,KAElD,QAAC,KAAD,CAAKU,GAAI3B,EAAOU,MACbS,IACC,QAAC,KAAD,CAAQS,QAAQ,OAAOC,GAAIC,EAAAA,GAAMC,GAAIL,EAAUC,GAAI3B,EAAOc,QAA1D,QAEE,QAAC,MAAD,W,mBC7DZ,aAAeO,GAAI,OAAIA,EAAKW,QAAQ,OAAb","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-agency/../packages/blog/gatsby-blog-core/src/templates/categories.gs.js","webpack://@elegantstack/gatsby-starter-flexiblog-agency/../packages/blog/gatsby-blog-core/src/containers/CategoryGS.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-agency/../packages/flow-ui/flow-ui-components/src/PaginationGS/Pagination.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-agency/../packages/flow-ui/flow-ui-components/src/utils/normalizeSlug.js"],"sourcesContent":["import { graphql } from 'gatsby'\nimport CategoryGS from '../containers/CategoryGS'\n\nexport default CategoryGS\n\nexport const pageQuery = graphql`\n  query allPostsGSByCategoryQuery(\n    $skip: Int!\n    $limit: Int!\n    $slug: String!\n  ) {\n    collectionInfo: googleCategoriesSheet(slug: { eq: $slug }) {\n      id\n      name\n      slug\n      description\n    }\n\n    posts: allGooglePostsSheet(\n      filter: {\n        category: { eq: $slug }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        title\n        slug\n        icon\n        filters\n      }\n      pageInfo {\n        pageCount\n        hasPreviousPage\n        hasNextPage\n        currentPage\n      }\n      totalCount\n    }\n  }\n`\n","import React from 'react';\r\nimport { Layout, Stack, Main, PreFooter } from '@layout';\r\nimport PageTitle from '@components/PageTitle';\r\nimport Divider from '@components/Divider';\r\nimport Seo from '@widgets/Seo';\r\nimport PostsList from '../../../../../site/src/components/Posts';\r\nimport PaginationGS from '@elegantstack/flow-ui-components/src/PaginationGS';\r\n\r\nconst CategoryGS = ({data: {posts, collectionInfo}, ...props}) => {\r\n\r\n  console.log('posts: ', posts);\r\n  console.log('collectionInfo: ', collectionInfo);\r\n  console.log('props: ', props);\r\n\r\n  return (\r\n    <Layout {...props}>\r\n      <Seo title={collectionInfo.name} description={collectionInfo.description}/>\r\n      <Divider/>\r\n      <Stack effectProps={{effect: 'fadeInDown'}}>\r\n        <PageTitle\r\n          header={collectionInfo.name}\r\n          subheader={collectionInfo.title}\r\n          running={collectionInfo.description}\r\n          totalCount={posts.totalCount}\r\n        />\r\n      </Stack>\r\n      <Divider/>\r\n      <Stack>\r\n        <Main>\r\n          <div>\r\n            {posts.nodes && <PostsList {...posts} />}\r\n          </div>\r\n        </Main>\r\n      </Stack>\r\n      <Divider/>\r\n      <PreFooter>\r\n        <PaginationGS {...posts.pageInfo} {...collectionInfo} />\r\n      </PreFooter>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n\r\nexport default CategoryGS;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport { Button, Flex, Box } from 'theme-ui'\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\r\nimport normalizeSlug from '@components/utils/normalizeSlug'\r\n\r\nconst pagingParam = 'page'\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    justifyContent: `space-between`,\r\n    alignItems: `center`,\r\n    textAlign: `center`,\r\n    borderRadius: `full`,\r\n    bg: `contentBg`,\r\n    maxWidth: [`none`, 500],\r\n    mx: `auto`,\r\n    p: 1\r\n  },\r\n  item: {\r\n    width: `1/3`\r\n  },\r\n  number: {\r\n    py: 2\r\n  },\r\n  button: {\r\n    minWidth: `full`\r\n  }\r\n}\r\n\r\nconst PaginationGS = ({\r\n  currentPage,\r\n  pageCount,\r\n  hasPreviousPage,\r\n  hasNextPage,\r\n  basePath = '',\r\n  slug = ''\r\n}) => {\r\n  if (!hasNextPage && !hasPreviousPage) return ''\r\n  let prefixPath = normalizeSlug(basePath + slug)\r\n  let pagingPath = normalizeSlug(prefixPath + pagingParam)\r\n  const prevLink = currentPage >= 3 ? `/${pagingPath}${currentPage - 1}` : `/${prefixPath}`\r\n  const nextLink = `/${pagingPath}${currentPage + 1}`\r\n\r\n  return (\r\n    <Flex sx={styles.wrapper}>\r\n      <Box sx={styles.item}>\r\n        {hasPreviousPage && (\r\n          <Button variant='mute' as={Link} to={prevLink} sx={styles.button}>\r\n            <FaChevronLeft />\r\n            Previous\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      <Box sx={{ ...styles.item, ...styles.number }}>\r\n        Page <strong>{currentPage}</strong> of <strong>{pageCount}</strong>\r\n      </Box>\r\n      <Box sx={styles.item}>\r\n        {hasNextPage && (\r\n          <Button variant='dark' as={Link} to={nextLink} sx={styles.button}>\r\n            Next\r\n            <FaChevronRight />\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PaginationGS\r\n\r\nPaginationGS.propTypes = {\r\n  currentPage: PropTypes.number,\r\n  pageCount: PropTypes.number,\r\n  hasPreviousPage: PropTypes.bool,\r\n  hasNextPage: PropTypes.bool,\r\n  slug: PropTypes.string,\r\n  pagingParam: PropTypes.string\r\n}\r\n","// normalize use of trailing slash\r\nexport default slug => slug.replace(/\\/*$/, `/`)\r\n"],"names":["data","posts","collectionInfo","props","console","log","Seo","title","name","description","Divider","effectProps","effect","PageTitle","header","subheader","running","totalCount","nodes","Posts","PaginationGS","pageInfo","styles","wrapper","justifyContent","alignItems","textAlign","borderRadius","bg","maxWidth","mx","p","item","width","number","py","button","minWidth","currentPage","pageCount","hasPreviousPage","hasNextPage","basePath","slug","prefixPath","normalizeSlug","pagingPath","prevLink","nextLink","sx","variant","as","Link","to","replace"],"sourceRoot":""}