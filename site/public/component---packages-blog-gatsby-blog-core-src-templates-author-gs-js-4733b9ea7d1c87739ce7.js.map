{"version":3,"file":"component---packages-blog-gatsby-blog-core-src-templates-author-gs-js-4733b9ea7d1c87739ce7.js","mappings":"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","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-agency/../packages/flow-ui/flow-ui-widgets/src/AuthorGSExpanded/AuthorExpanded.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-agency/../packages/blog/gatsby-blog-core/src/templates/author.gs.js","webpack://@elegantstack/gatsby-starter-flexiblog-agency/../packages/blog/gatsby-blog-core/src/containers/CollectionGS.Author.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-agency/../packages/flow-ui/flow-ui-components/src/MemphisPattern/MemphisPattern.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-agency/../packages/flow-ui/flow-ui-components/src/SocialMediaGS/SocialMediaGS.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link as GLink } from 'gatsby'\r\nimport { Flex, Box, Text, Heading, Card, Badge, Link } from 'theme-ui'\r\nimport MemphisPattern from '@components/MemphisPattern'\r\nimport attachSocialIcons from '@helpers/attachSocialIcons'\r\nimport SocialMediaGS from '@components/SocialMediaGS';\r\nimport Image from '../../../../../site/src/components/Image/index';\r\n\r\nconst styles = {\r\n  card: {\r\n    position: `relative`\r\n  },\r\n  wrapper: {\r\n    flexDirection: [`column`, `row`],\r\n    position: `relative`,\r\n    zIndex: 3\r\n  },\r\n  avatarColumn: {\r\n    flexBasis: `1/3`\r\n  },\r\n  infoColumn: {\r\n    flexBasis: `2/3`\r\n  },\r\n  innerBox: {\r\n    flexBasis: `1/2`,\r\n    flexGrow: 1,\r\n    px: [0, 3],\r\n    mt: [3, 0]\r\n  },\r\n  subheader: {\r\n    color: `omegaDark`\r\n  },\r\n  name: {\r\n    textAlign: [`center`, `left`],\r\n    mt: [3, 0],\r\n    px: 3\r\n  },\r\n  bio: {\r\n    textAlign: [`center`, `left`]\r\n  },\r\n  socialList: {\r\n    a: {\r\n      m: 0\r\n    }\r\n  },\r\n  link: {\r\n    position: `absolute`,\r\n    top: 10,\r\n    right: 10,\r\n    zIndex: 3\r\n  },\r\n  pattern: {\r\n    borderRadius: `lg`\r\n  },\r\n  imgWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  gradient: {\r\n    size: `full`,\r\n    borderRadius: `lg`,\r\n    position: `absolute`,\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 2,\r\n    background: [\r\n      t =>\r\n        `linear-gradient(0deg, ${t.colors.contentBg} 20%, rgba(255, 255, 255, 0) 80%)`,\r\n      t =>\r\n        `linear-gradient(270deg, ${t.colors.contentBg} 20%, rgba(255, 255, 255, 0) 100%)`\r\n    ]\r\n  }\r\n}\r\n\r\nconst Subheader = ({ children }) => (\r\n  <Heading variant='h4' sx={styles.subheader}>\r\n    {children}\r\n  </Heading>\r\n)\r\n\r\nconst AuthorAvatar = ({ name, photo, slug }) => {\r\n  return (\r\n    photo ? (\r\n      <Box sx={styles.imgWrapper}>\r\n        <Link as={GLink} to={`/${slug}`} aria-label={name}>\r\n          <Image icon={photo} width={'150px'} height={'150px'} objectFit={'cover'} borderRadius={'100%'}/>\r\n        </Link>\r\n      </Box>\r\n    ) : null\r\n  )\r\n}\r\n\r\n\r\nconst AuthorName = ({ name, slug }) => (\r\n  <Box sx={styles.name}>\r\n    <Heading variant='h3'>\r\n      <Link as={GLink} to={`/${slug}`}>\r\n        {name}\r\n      </Link>\r\n    </Heading>\r\n  </Box>\r\n)\r\n\r\nconst AuthorBio = ({ position, description }) => (\r\n  <Box sx={styles.bio}>\r\n    <Subheader>{position}</Subheader>\r\n    <Text>{description}</Text>\r\n  </Box>\r\n)\r\n\r\nconst AuthorSkills = ({ expertise }) => {\r\n  const skills = expertise.split(',').map(skill => skill.trim())\r\n  return (\r\n    skills ? (\r\n      <Box sx={styles.innerBox}>\r\n        <Subheader>Expertise</Subheader>\r\n        {skills.map(skill => (\r\n          <Text key={`skill-${skill}`}>{skill}</Text>\r\n        ))}\r\n      </Box>\r\n    ) : null\r\n  )\r\n}\r\n\r\nconst AuthorSocialMedia = ({ website, instagram, twitter }) => {\r\n  const social = [instagram, twitter, website]\r\n  return website || instagram || twitter ? (\r\n    <Box sx={styles.innerBox}>\r\n      <Subheader>Social Media</Subheader>\r\n      <SocialMediaGS\r\n        variant='vertical'\r\n        items={attachSocialIcons(social)}\r\n        wrapperStyle={styles.socialList}\r\n      />\r\n    </Box>\r\n  ) : null\r\n}\r\n\r\n\r\nconst AuthorGSExpanded = ({ author, withLink }) => {\r\n  if (!author) return null\r\n\r\n  const { expertise, website, instagram, twitter } = author\r\n\r\n  return (\r\n    <Card variant='paper' sx={styles.card}>\r\n      <Flex sx={styles.wrapper}>\r\n        <Box sx={styles.avatarColumn}>\r\n          <AuthorAvatar {...author} />\r\n        </Box>\r\n        <Box sx={styles.infoColumn}>\r\n          <AuthorName {...author} />\r\n          <Flex sx={styles.wrapper}>\r\n            <Box sx={styles.innerBox}>\r\n              <AuthorBio {...author} />\r\n            </Box>\r\n            {(expertise || website || instagram || twitter) && (\r\n              <Box sx={styles.innerBox}>\r\n                <Flex>\r\n                  <AuthorSkills {...author} />\r\n                  <AuthorSocialMedia {...author} />\r\n                </Flex>\r\n              </Box>\r\n            )}\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n      {withLink && (\r\n        <Badge variant='tag' as={GLink} to={author.slug} sx={styles.link}>\r\n          View Posts\r\n        </Badge>\r\n      )}\r\n      <Box sx={styles.gradient} />\r\n      <MemphisPattern sx={styles.pattern} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AuthorGSExpanded\r\n","import { graphql } from 'gatsby';\nimport AuthorGS from '../containers/CollectionGS.Author';\n\nexport default AuthorGS;\n\nexport const pageQuery = graphql`\n  query PostsByAuthorQuery(\n    $skip: Int!\n    $limit: Int!\n    $slug: String!\n  ) {\n    collectionInfo: googleAuthorsSheet(slug: { eq: $slug }) {\n      id\n      slug\n      name\n      photo\n      description\n      expertise\n      position\n      instagram\n      twitter\n      website\n    }\n    posts: allGooglePostsSheet(\n      filter: {author: {eq: $slug}}\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        title\n        slug\n        icon\n        filters\n      }\n      pageInfo {\n        pageCount\n        hasPreviousPage\n        hasNextPage\n        currentPage\n      }\n      totalCount\n    }\n  }\n`;\n","import React from 'react';\nimport { Layout, Stack, Main, PreFooter } from '@layout';\nimport PageTitle from '@components/PageTitle';\nimport Divider from '@components/Divider';\nimport Seo from '@widgets/Seo';\nimport AuthorGSExpanded from '@widgets/AuthorGSExpanded';\nimport PostsList from '../../../../../site/src/components/Posts';\nimport PaginationGS from '@elegantstack/flow-ui-components/src/PaginationGS';\n\nconst PageCollectionAuthors = ({\n                                 data: {posts, collectionInfo},\n                                 ...props\n                               }) => {\n\n  return (\n    <Layout {...props}>\n      <Seo title={collectionInfo.name} description={collectionInfo.description}/>\n      <Divider/>\n      <Stack effectProps={{effect: 'fadeInDown'}}>\n        <PageTitle header=\"Published by Author\" totalCount={posts.totalCount}/>\n      </Stack>\n      <Divider/>\n      <Stack>\n        <Main>\n          <AuthorGSExpanded author={collectionInfo}/>\n          <Divider/>\n          {posts.nodes && <PostsList {...posts} />}\n        </Main>\n      </Stack>\n      <Divider/>\n      <PreFooter>\n        <PaginationGS {...posts.pageInfo} {...collectionInfo} />\n      </PreFooter>\n    </Layout>\n  );\n};\n\n\nexport default PageCollectionAuthors;\n","import React from 'react'\r\nimport { Box } from 'theme-ui'\r\nimport memphis from '../../assets/memphis.png'\r\n\r\nconst styles = {\r\n  pattern: {\r\n    size: `full`,\r\n    backgroundImage: `url(${memphis})`,\r\n    backgroundSize: `11rem`,\r\n    position: `absolute`,\r\n    opacity: 0.05,\r\n    top: 0,\r\n    left: 0\r\n  }\r\n}\r\n\r\nconst MemphisPattern = ({ sx = {}, ...props }) => (\r\n  <Box sx={{ ...styles.pattern, ...sx }} {...props}></Box>\r\n)\r\n\r\nexport default MemphisPattern\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport { Flex, NavLink, IconButton, Heading, Divider } from 'theme-ui'\r\nimport hashCode from '@components/utils/hashCode'\r\nimport buildResponsiveVariant from '@components/utils/buildResponsiveVariant'\r\n\r\nconst styles = {\r\n  divider: {\r\n    mt: 3\r\n  }\r\n}\r\n\r\nconst NavigationList = ({ navKey, wrapperProps, items, ...props }) =>\r\n  items ? (\r\n    <Flex {...wrapperProps}>\r\n      {items.map((menuItem, index) => (\r\n        <NavigationItem key={`${navKey}-${index}`} {...menuItem} {...props} />\r\n      ))}\r\n    </Flex>\r\n  ) : null\r\n\r\nconst NavigationDivider = ({ index }) =>\r\n  index !== 0 && <Divider sx={styles.divider} />\r\n\r\nconst NavigationItem = ({\r\n  name,\r\n  slug,\r\n  url,\r\n  Icon,\r\n  color,\r\n  variant,\r\n  iconOnly\r\n}) => {\r\n  let linkProps = {\r\n    sx: { variant: iconOnly ? 'icon' : variant }\r\n  }\r\n\r\n  //External link\r\n  if (url) {\r\n    linkProps = {\r\n      ...linkProps,\r\n      as: 'a',\r\n      href: url,\r\n      target: '_blank',\r\n      rel: 'noopener noreferrer'\r\n    }\r\n  }\r\n  //Internal link\r\n  if (slug) {\r\n    linkProps = {\r\n      ...linkProps,\r\n      as: Link,\r\n      to: slug\r\n    }\r\n  }\r\n\r\n  return iconOnly ? (\r\n    <IconButton {...linkProps} title={name}>\r\n      {Icon && <Icon color={color} />}\r\n    </IconButton>\r\n  ) : (\r\n    <NavLink {...linkProps}>\r\n      {Icon && <Icon color={color} />}\r\n      {name}\r\n    </NavLink>\r\n  )\r\n}\r\n\r\nconst SocialMediaGS = ({\r\n  items,\r\n  variant,\r\n  headingProps,\r\n  wrapperStyle,\r\n  ...props\r\n}) => {\r\n\r\n  if (!items || !items.length) return null\r\n  const wrapperVariant = buildResponsiveVariant('lists.links', variant)\r\n  const linkVariant = buildResponsiveVariant('links', variant)\r\n\r\n  const navKey = `${hashCode(\r\n    items.map(node => node.title || node.name).join()\r\n  )}-nav`\r\n\r\n  const wrapperProps = {\r\n    sx: { variant: wrapperVariant, ...wrapperStyle },\r\n    key: navKey\r\n  }\r\n\r\n  const hasGroupedItems = Array.isArray(items[0].items)\r\n\r\n  return hasGroupedItems ? (\r\n    items.map((node, i) => (\r\n      <Fragment key={`nav-menu-${i}`}>\r\n        <NavigationDivider index={i} />\r\n        <Heading {...headingProps}>{node.title}</Heading>\r\n        <NavigationList\r\n          navKey={navKey}\r\n          wrapperProps={wrapperProps}\r\n          items={node.items}\r\n          variant={linkVariant}\r\n          {...props}\r\n        />\r\n      </Fragment>\r\n    ))\r\n  ) : (\r\n    <NavigationList\r\n      navKey={navKey}\r\n      wrapperProps={wrapperProps}\r\n      items={items}\r\n      variant={linkVariant}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SocialMediaGS\r\n\r\nSocialMediaGS.defaultProps = {\r\n  variant: 'horizontal'\r\n}\r\n\r\nconst itemsShape = PropTypes.shape({\r\n  name: PropTypes.string,\r\n  slug: PropTypes.string,\r\n  color: PropTypes.string,\r\n  Icon: PropTypes.element\r\n})\r\n\r\nconst variantShape = PropTypes.oneOf(['horizontal', 'vertical'])\r\n\r\nSocialMediaGS.propTypes = {\r\n  variant: PropTypes.oneOfType([PropTypes.arrayOf(variantShape), variantShape]),\r\n  iconOnly: PropTypes.bool,\r\n  wrapperStyle: PropTypes.object,\r\n  headingProps: PropTypes.object,\r\n  items: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        title: PropTypes.string,\r\n        items: itemsShape\r\n      })\r\n    ),\r\n    PropTypes.arrayOf(itemsShape)\r\n  ])\r\n}\r\n"],"names":["styles","card","position","wrapper","flexDirection","zIndex","avatarColumn","flexBasis","infoColumn","innerBox","flexGrow","px","mt","subheader","color","name","textAlign","bio","socialList","a","m","link","top","right","pattern","borderRadius","imgWrapper","display","alignItems","justifyContent","height","gradient","size","left","background","t","colors","contentBg","Subheader","children","variant","sx","AuthorAvatar","photo","slug","as","GLink","to","Image","icon","width","objectFit","AuthorName","AuthorBio","description","AuthorSkills","skills","expertise","split","map","skill","trim","key","AuthorSocialMedia","website","instagram","twitter","social","SocialMediaGS","items","attachSocialIcons","wrapperStyle","author","withLink","MemphisPattern","data","posts","collectionInfo","props","Seo","title","Divider","effectProps","effect","PageTitle","header","totalCount","nodes","Posts","PaginationGS","pageInfo","backgroundImage","backgroundSize","opacity","divider","NavigationList","navKey","wrapperProps","menuItem","index","NavigationItem","NavigationDivider","url","Icon","iconOnly","linkProps","href","target","rel","Link","headingProps","length","wrapperVariant","buildResponsiveVariant","linkVariant","hashCode","node","join","Array","isArray","i","Fragment","defaultProps"],"sourceRoot":""}